/*!
 * ohdoylerules - ohdoylerules template
 * @version v1.0.0
 * @link http://ohdoylerules.com
 * @license MIT (http://opensource.org/licenses/MIT)
 * @copyright (c) 6/4/2017 James Doyle (http://ohdoylerules.com/)
 */article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
nav,
section,
summary {
  display: block; }

audio,
canvas,
video {
  display: inline-block;
  *display: inline;
  *zoom: 1; }

audio:not([controls]) {
  display: none;
  height: 0; }

[hidden] {
  display: none; }

html {
  font-size: 100%;
  background: #fff;
  color: #000;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%; }

html,
button,
input,
select,
textarea {
  font-family: sans-serif; }

body {
  margin: 0; }

a:focus {
  outline: thin dotted; }

a:hover, a:active {
  outline: 0; }

h1 {
  font-size: 2em;
  margin: 0.67em 0; }

h2 {
  font-size: 1.5em;
  margin: 0.83em 0; }

h3 {
  font-size: 1.17em;
  margin: 1em 0; }

h4 {
  font-size: 1em;
  margin: 1.33em 0; }

h5 {
  font-size: 0.83em;
  margin: 1.67em 0; }

h6 {
  font-size: 0.75em;
  margin: 2.33em 0; }

abbr[title] {
  border-bottom: 1px dotted; }

b,
strong {
  font-weight: bold; }

blockquote {
  margin: 1em 40px; }

dfn {
  font-style: italic; }

mark {
  background: #ff0;
  color: #000; }

p,
pre {
  margin: 1em 0; }

code,
kbd,
pre,
samp {
  font-family: monospace, serif;
  _font-family: 'courier new', monospace;
  font-size: 1em; }

pre {
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word; }

q {
  quotes: "\201C" "\201D" "\2018" "\2019"; }

q {
  quotes: none; }

q:before,
q:after {
  content: '';
  content: none; }

small {
  font-size: 80%; }

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

dl,
menu,
ol,
ul {
  margin: 1em 0; }

dd {
  margin: 0 0 0 40px; }

menu,
ol,
ul {
  padding: 0 0 0 40px; }

nav ul,
nav ol {
  list-style-image: none; }

img {
  border: 0;
  -ms-interpolation-mode: bicubic; }

svg:not(:root) {
  overflow: hidden; }

figure {
  margin: 0; }

form {
  margin: 0; }

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

legend {
  border: 0;
  padding: 0;
  white-space: normal;
  *margin-left: -7px; }

button,
input,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
  margin: 0;
  vertical-align: baseline;
  *vertical-align: middle; }

button,
input {
  line-height: normal; }

button,
select {
  text-transform: none; }

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer;
  *overflow: visible; }

button[disabled],
input[disabled] {
  cursor: default; }

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  padding: 0;
  *height: 13px;
  *width: 13px; }

input[type="search"] {
  -webkit-appearance: textfield;
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  box-sizing: content-box; }

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

textarea {
  overflow: auto;
  vertical-align: top; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

body {
  font: 400 normal normal 16px/1.5 'Open Sans','Helvetica Neue',Helvetica,Arial,sans-serif;
  color: #333;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -webkit-tap-highlight-color: transparent;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%; }

h1, h2, h3, h4, h5, h6 {
  font-family: Lato,'Open Sans','Helvetica Neue',Helvetica,Arial; }

code, kbd, pre, pre code, samp {
  font-family: monospace, serif; }

a,
a:visited {
  color: #eb694b;
  text-decoration: none;
  transition: color .4s ease; }

a:hover,
a:active {
  color: #df6549; }

blockquote {
  border-left: 2px solid #eb694b;
  margin: 0;
  padding: .5em 0 0.5em 1em;
  font-family: Georgia;
  font-style: italic;
  font-weight: 700; }
  blockquote p {
    margin: 0; }

p img {
  max-width: 100%;
  height: auto; }

img[align=left] {
  margin-right: .8em; }

img[align=right] {
  margin-left: .8em; }

hr {
  margin: 1em 0;
  border: 0;
  height: 1px;
  display: block;
  width: 100%;
  background: #ddd; }

.container {
  max-width: 100%;
  width: 1140px;
  margin: 0 auto; }

.do-link {
  float: right;
  margin: -30px 0 0 0; }

.ubu-link {
  float: right;
  margin: 0; }

header {
  padding: 3em 15% 0;
  background-color: #eb694b;
  text-align: center; }

.header-logo {
  padding: 1.8em 0; }
  .header-logo img {
    margin-top: 4em;
    -webkit-filter: blur();
    -webkit-transform: scale(1);
    -webkit-backface-visibility: hidden;
    opacity: 1;
    transition: all .2s ease; }
  .header-logo h1 {
    -ms-transform: translateY(-2em);
    transform: translateY(-2em);
    -webkit-backface-visibility: hidden;
    opacity: 0;
    transition: all .2s ease; }
  .header-logo h1 a {
    color: #fff;
    text-shadow: 0 1px 1px rgba(0, 0, 0, 0.2); }
  .header-logo:hover h1, .header-logo.active h1 {
    opacity: 1;
    -webkit-transform: translateY(-2.5em); }
  .header-logo:hover img, .header-logo.active img {
    -webkit-filter: blur(3px);
    -webkit-transform: scale(0.8);
    opacity: 0.5; }

.header-post {
  margin-bottom: 2em; }
  .header-post h1 {
    font-size: 4em;
    color: #fff;
    display: inline-block;
    width: 70%;
    margin-top: 0;
    -webkit-filter: blur();
    -webkit-backface-visibility: hidden;
    opacity: 1;
    -webkit-transform: scale(1);
    transition: all .2s ease; }
  .header-post a {
    -webkit-backface-visibility: hidden;
    opacity: 0;
    font-size: 2em;
    text-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);
    -webkit-transform: translateY(-2em);
    z-index: 2;
    color: #fff;
    display: inline-block;
    transition: all .2s ease;
    font-family: Lato,'Open Sans','Helvetica Neue',Helvetica,Arial;
    font-weight: bold; }
  .header-post:hover h1, .header-post.active h1 {
    opacity: 0.5;
    -webkit-filter: blur(3px);
    -webkit-transform: scale(0.8); }
  .header-post:hover a, .header-post.active a {
    opacity: 1;
    -webkit-transform: translateY(-4.5em); }

.the-loop {
  overflow: hidden;
  max-width: 100%;
  width: 720px;
  padding: 0 1em;
  margin: 0 auto; }
  .the-loop article {
    text-align: center;
    border-bottom: 1px solid #ddd;
    padding-bottom: 3em; }
    .the-loop article h2 {
      font-size: 4em;
      line-height: 1; }
    .the-loop article h2 a {
      color: inherit;
      -ms-transform: color .4s ease;
      transform: color .4s ease; }
    .the-loop article h2 a:hover, .the-loop article h2 a:active {
      color: #555; }

.post-info {
  color: #aaa;
  font-style: italic; }
  .post-info span i {
    color: #888; }
  .post-info span i:before {
    -ms-transform: rotate(0deg);
    transform: rotate(0deg);
    -webkit-transition: -webkit-transform .4s ease;
    transition: transform .4s ease; }
  .post-info span:hover i:before {
    -ms-transform: rotate(20deg);
    transform: rotate(20deg); }

.post-intro .read-more i {
  transition: margin-left .4s ease; }

.post-intro .read-more:hover i {
  margin-left: .5em; }

.the-loop article .post-intro {
  text-align: left; }

.post-author {
  padding-bottom: 1em;
  display: inline-block; }
  .post-author img {
    float: left;
    margin-right: .8em; }

.social-links {
  margin: 0;
  padding: 0; }
  .social-links li {
    margin-right: 0.25em;
    list-style: none;
    float: left;
    font-size: 1.4em; }
    .social-links li a {
      display: block;
      opacity: 1;
      transition: opacity 0.2s ease; }
      .social-links li a:hover {
        opacity: 0.8; }

.center {
  text-align: center;
  margin: 1em 0; }

.center img {
  max-width: 100%;
  height: auto; }

.cf:before,
.cf:after {
  content: " ";
  display: table; }

.cf:after {
  clear: both; }

.cf {
  *zoom: 1; }

p code, li code {
  margin: 0 2px;
  padding: 0 5px;
  border: 1px solid #DDD;
  background-color: #F8F8F8;
  border-radius: 3px;
  white-space: nowrap; }

li code {
  white-space: pre-wrap; }

@media only screen and (max-width: 767px) {
  body {
    font-size: 14px; }
  header {
    font-size: 0.8em;
    padding: 2em 30% 0; }
    header.header-post h1 {
      width: 85%; }
    header.header-post.active a, header.header-post:hover a {
      -ms-transform: translateY(-3.5em);
      transform: translateY(-3.5em); }
  code,
  kbd,
  pre,
  pre code,
  samp {
    font-family: sans-serif, monospace;
    font-size: 1em; }
  .post-info span {
    float: left;
    clear: left; }
  .the-loop {
    width: auto; }
  .the-loop article h2 {
    font-size: 2em;
    word-wrap: break-word;
    line-height: 1.2; }
  .main-content,
  .the-loop article .post-intro {
    word-wrap: break-word; }
  .header-post h1 {
    font-size: 3em;
    line-height: 1.2; }
  .post-author {
    margin-top: 2rem;
    text-align: center; }
    .post-author .post-author-link img {
      width: 120px;
      margin: 0 auto;
      float: none; }
  .post-author-info {
    width: 100%;
    display: inline-block; }
  .do-link {
    margin: 1.5em 0; }
  .do-link, .ubu-link {
    width: 100%; } }

@media only screen and (max-width: 640px) {
  header {
    padding: 2em 8% 0; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
