%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.9.4 (Build 13E28) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 322 72
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 322 72
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9496 1.0000 1.0890 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4106 0.2119 0.0194 0.3583 0.7166 0.1202 0.1807 0.0716 0.9494 ] def 
/RangeLMN [ 0.0 0.9496 0.0 1.0000 0.0 1.0890 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.47843137 0.75294119 0.74901962 sc
q
314 72 m
314 0 l
322 0 l
322 72 l
314 72 l
h
314 72 m
W*
0 0 322 72 rc
309 77 m
327 77 l
327 -5 l
309 -5 l
h
309 77 m
f*
Q
0 0 0 sc
q
0.5679431 66.688919 m
41.60183 66.688919 l
41.60183 59.021687 l
25.486444 59.021687 l
25.486444 16 l
16.612335 16 l
16.612335 59.021687 l
0.5679431 59.021687 l
0.5679431 66.688919 l
h
35.414623 52.70332 m
44.288734 52.70332 l
53.872776 25.300068 l
54.014759 25.300068 l
63.314827 52.70332 l
71.762978 52.70332 l
57.493412 14.012199 l
56.830807 12.35569 56.180046 10.770199 55.541107 9.2556763 c
54.902168 7.7411537 54.121254 6.4041343 53.198341 5.2445784 c
52.275429 4.085022 51.127724 3.1621237 49.755188 2.4758556 c
48.382652 1.7895877 46.631512 1.4464588 44.501713 1.4464588 c
42.608562 1.4464588 40.739101 1.5884433 38.893276 1.8724161 c
38.893276 8.6877327 l
39.555882 8.5930758 40.194809 8.4865875 40.810085 8.3682652 c
41.425358 8.2499428 42.064289 8.1907825 42.726891 8.1907825 c
43.67347 8.1907825 44.454384 8.309103 45.069656 8.5457468 c
45.684933 8.7823915 46.19371 9.1255198 46.596004 9.5751438 c
46.998299 10.024768 47.341427 10.557209 47.625401 11.172483 c
47.909374 11.787759 48.169678 12.497681 48.406322 13.302271 c
49.329231 16.141985 l
35.414623 52.70332 l
h
77.502579 52.70332 m
85.169815 52.70332 l
85.169815 47.733818 l
85.311798 47.733818 l
86.447693 49.863617 88.03318 51.389946 90.068321 52.312859 c
92.103462 53.235771 94.304222 53.69722 96.670662 53.69722 c
99.557716 53.69722 102.07794 53.188442 104.2314 52.170876 c
106.38486 51.153305 108.1715 49.757126 109.59136 47.982292 c
111.01123 46.207462 112.07611 44.13686 112.78604 41.770416 c
113.49598 39.403976 113.85094 36.871922 113.85094 34.174179 c
113.85094 31.713079 113.53147 29.323009 112.89253 27.003897 c
112.25359 24.684784 111.28337 22.637844 109.98183 20.863012 c
108.68028 19.088182 107.03563 17.668339 105.04782 16.603439 c
103.06001 15.538541 100.71727 15.0061 98.019524 15.0061 c
96.836304 15.0061 95.653099 15.112588 94.469879 15.325567 c
93.286659 15.538548 92.150787 15.881676 91.062225 16.354965 c
89.973656 16.828253 88.967934 17.431686 88.045021 18.165283 c
87.122108 18.89888 86.353027 19.762617 85.737755 20.756523 c
85.595772 20.756523 l
85.595772 2.4403594 l
77.502579 2.4403594 l
77.502579 52.70332 l
h
105.75775 34.316162 m
105.75775 35.972672 105.54477 37.581829 105.11881 39.143681 c
104.69286 40.705532 104.05392 42.089878 103.202 43.296764 c
102.35008 44.503651 101.2852 45.473877 100.00732 46.207474 c
98.729446 46.941071 97.262276 47.307861 95.605766 47.307861 c
92.19809 47.307861 89.630539 46.12466 87.903038 43.758217 c
86.175537 41.391777 85.311798 38.244457 85.311798 34.316162 c
85.311798 32.470341 85.536606 30.754696 85.986229 29.16918 c
86.435852 27.583664 87.110283 26.22298 88.009529 25.08709 c
88.908775 23.951197 89.985489 23.051964 91.2397 22.38936 c
92.493919 21.726755 93.949257 21.395458 95.605766 21.395458 c
97.451591 21.395458 99.01342 21.774084 100.2913 22.531345 c
101.56918 23.288607 102.62222 24.270664 103.45048 25.477551 c
104.27873 26.684435 104.87034 28.05695 105.2253 29.595137 c
105.58027 31.133324 105.75775 32.706985 105.75775 34.316162 c
h
127.9677 32.25737 m
127.9677 30.837505 128.16884 29.464991 128.57114 28.139784 c
128.97343 26.814575 129.57686 25.655037 130.38145 24.661131 c
131.18605 23.667227 132.2036 22.874481 133.43414 22.282869 c
134.6647 21.691259 136.13187 21.395458 137.83571 21.395458 c
140.20215 21.395458 142.1071 21.904236 143.55063 22.921806 c
144.99417 23.939377 146.07088 25.465708 146.78081 27.500847 c
154.44804 27.500847 l
154.02208 25.513037 153.2885 23.738232 152.24727 22.17638 c
151.20602 20.614531 149.95183 19.301174 148.48463 18.236277 c
147.01744 17.171377 145.3728 16.366798 143.55063 15.822517 c
141.72847 15.278236 139.82352 15.0061 137.83571 15.0061 c
134.94865 15.0061 132.39293 15.479381 130.16847 16.425957 c
127.94402 17.372534 126.06273 18.697721 124.52454 20.401558 c
122.98636 22.105396 121.82682 24.140505 121.04589 26.506947 c
120.26497 28.873388 119.87451 31.476435 119.87451 34.316162 c
119.87451 36.91925 120.28863 39.392143 121.11688 41.734921 c
121.94514 44.077698 123.12834 46.136471 124.66653 47.911301 c
126.20471 49.686131 128.06235 51.094143 130.23947 52.135376 c
132.4166 53.176613 134.87766 53.69722 137.62273 53.69722 c
140.50978 53.69722 143.101 53.093788 145.39645 51.886902 c
147.69189 50.680019 149.59685 49.082695 151.11137 47.094883 c
152.6259 45.107071 153.72627 42.82349 154.41255 40.244068 c
155.09882 37.66465 155.27629 35.002441 154.94499 32.25737 c
127.9677 32.25737 l
h
146.85181 37.581837 m
146.75714 38.859715 146.48502 40.090244 146.03539 41.273468 c
145.58577 42.456688 144.97049 43.486073 144.18958 44.361656 c
143.40865 45.23724 142.46208 45.947163 141.34985 46.491444 c
140.23763 47.035725 138.99527 47.307861 137.62273 47.307861 c
136.20287 47.307861 134.91318 47.059387 133.75362 46.562435 c
132.59406 46.065483 131.60017 45.379227 130.77191 44.503643 c
129.94366 43.628059 129.28107 42.598675 128.78412 41.415451 c
128.28717 40.232231 128.01503 38.954372 127.9677 37.581837 c
146.85181 37.581837 l
h
158.48381 52.70332 m
164.5182 52.70332 l
164.5182 55.756016 l
164.5182 58.075127 164.80217 59.956421 165.37012 61.399948 c
165.93806 62.843479 166.69531 63.955688 167.64189 64.736618 c
168.58847 65.51754 169.66519 66.038147 170.87207 66.298454 c
172.07896 66.558769 173.34499 66.688919 174.6702 66.688919 c
177.27327 66.688919 179.1664 66.52327 180.34962 66.191971 c
180.34962 59.873604 l
179.82901 60.015587 179.2729 60.122078 178.68129 60.193069 c
178.08968 60.264065 177.39159 60.299561 176.58701 60.299561 c
175.49843 60.299561 174.56371 60.039253 173.78278 59.518639 c
173.00186 58.99802 172.6114 57.980465 172.6114 56.465942 c
172.6114 52.70332 l
179.49771 52.70332 l
179.49771 46.668926 l
172.6114 46.668926 l
172.6114 16 l
164.5182 16 l
164.5182 46.668926 l
158.48381 46.668926 l
158.48381 52.70332 l
h
202.2756 15.0061 m
199.34122 15.0061 196.72633 15.491213 194.43088 16.461454 c
192.13544 17.431694 190.19498 18.768713 188.60947 20.472551 c
187.02396 22.17639 185.81709 24.211498 184.98883 26.57794 c
184.16058 28.944382 183.74646 31.547428 183.74646 34.387157 c
183.74646 37.179558 184.16058 39.758942 184.98883 42.125381 c
185.81709 44.491821 187.02396 46.526932 188.60947 48.23077 c
190.19498 49.934608 192.13544 51.271626 194.43088 52.241867 c
196.72633 53.212109 199.34122 53.69722 202.2756 53.69722 c
205.20999 53.69722 207.82486 53.212109 210.12032 52.241867 c
212.41576 51.271626 214.35622 49.934608 215.94173 48.23077 c
217.52724 46.526932 218.73412 44.491821 219.56236 42.125381 c
220.39062 39.758942 220.80475 37.179558 220.80475 34.387157 c
220.80475 31.547428 220.39062 28.944382 219.56236 26.57794 c
218.73412 24.211498 217.52724 22.17639 215.94173 20.472551 c
214.35622 18.768713 212.41576 17.431694 210.12032 16.461454 c
207.82486 15.491213 205.20999 15.0061 202.2756 15.0061 c
h
202.2756 21.395458 m
204.0741 21.395458 205.63593 21.774084 206.96114 22.531345 c
208.28633 23.288607 209.37488 24.282497 210.22681 25.513046 c
211.07872 26.743595 211.70583 28.127943 212.10811 29.66613 c
212.51041 31.204317 212.71155 32.777977 212.71155 34.387157 c
212.71155 35.949009 212.51041 37.510838 212.10811 39.072689 c
211.70583 40.634537 211.07872 42.018887 210.22681 43.225769 c
209.37488 44.432655 208.28633 45.414715 206.96114 46.171974 c
205.63593 46.929237 204.0741 47.307861 202.2756 47.307861 c
200.4771 47.307861 198.91528 46.929237 197.59007 46.171974 c
196.26486 45.414715 195.17632 44.432655 194.3244 43.225769 c
193.47247 42.018887 192.84538 40.634537 192.44308 39.072689 c
192.04079 37.510838 191.83965 35.949009 191.83965 34.387157 c
191.83965 32.777977 192.04079 31.204317 192.44308 29.66613 c
192.84538 28.127943 193.47247 26.743595 194.3244 25.513046 c
195.17632 24.282497 196.26486 23.288607 197.59007 22.531345 c
198.91528 21.774084 200.4771 21.395458 202.2756 21.395458 c
h
228.53214 52.70332 m
236.12839 52.70332 l
236.12839 45.604031 l
236.27037 45.604031 l
236.507 46.597939 236.96846 47.568165 237.65472 48.51474 c
238.34099 49.461319 239.16924 50.325054 240.13948 51.10598 c
241.10973 51.886906 242.18643 52.514004 243.36966 52.987293 c
244.55287 53.460579 245.75974 53.69722 246.9903 53.69722 c
247.93687 53.69722 248.58763 53.673557 248.9426 53.626228 c
249.29756 53.578899 249.66435 53.53157 250.04298 53.484241 c
250.04298 45.675026 l
249.47504 45.769684 248.89526 45.852509 248.30367 45.9235 c
247.71205 45.994495 247.13228 46.029991 246.56433 46.029991 c
245.1918 46.029991 243.9021 45.757854 242.69522 45.213573 c
241.48834 44.669289 240.43529 43.864712 239.53604 42.799812 c
238.6368 41.734917 237.92686 40.421558 237.40625 38.859707 c
236.88564 37.297855 236.62534 35.49939 236.62534 33.464249 c
236.62534 16 l
228.53214 16 l
228.53214 52.70332 l
h
254.50471 52.70332 m
262.17194 52.70332 l
262.17194 47.591835 l
262.38492 47.591835 l
263.00018 48.491081 263.66278 49.319324 264.37271 50.076584 c
265.08264 50.833847 265.8754 51.472775 266.75098 51.993393 c
267.62656 52.514008 268.63229 52.928131 269.76819 53.235767 c
270.90408 53.543404 272.2056 53.69722 273.67279 53.69722 c
275.89725 53.69722 277.96786 53.200275 279.88467 52.206371 c
281.80148 51.212463 283.16217 49.674301 283.96677 47.591835 c
285.33929 49.484985 286.92477 50.975822 288.7233 52.064384 c
290.52179 53.152946 292.76987 53.69722 295.46762 53.69722 c
299.34857 53.69722 302.36575 52.75066 304.5192 50.857506 c
306.67267 48.964352 307.74939 45.793369 307.74939 41.34446 c
307.74939 16 l
299.65619 16 l
299.65619 37.43985 l
299.65619 38.907043 299.60886 40.244064 299.51419 41.450951 c
299.41956 42.657833 299.1474 43.699051 298.69778 44.574635 c
298.24817 45.450218 297.57373 46.124645 296.6745 46.597931 c
295.77524 47.07122 294.54471 47.307861 292.98285 47.307861 c
290.23779 47.307861 288.25 46.455956 287.01944 44.752117 c
285.78891 43.048279 285.17365 40.634544 285.17365 37.510845 c
285.17365 16 l
277.08044 16 l
277.08044 39.569637 l
277.08044 42.125393 276.61899 44.054016 275.69608 45.355556 c
274.77316 46.657101 273.08121 47.307861 270.62009 47.307861 c
269.57886 47.307861 268.57315 47.094887 267.60291 46.668926 c
266.63266 46.242966 265.78076 45.627701 265.04715 44.823112 c
264.31357 44.01852 263.72195 43.024632 263.27234 41.841408 c
262.82272 40.658188 262.5979 39.309338 262.5979 37.794815 c
262.5979 16 l
254.50471 16 l
254.50471 52.70332 l
h
254.50471 52.70332 m
W*
0 0 322 72 rc
-4.4320569 71.688919 m
312.74939 71.688919 l
312.74939 -3.5535412 l
-4.4320569 -3.5535412 l
h
-4.4320569 71.688919 m
f*
ep
end
